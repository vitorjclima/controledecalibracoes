/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.vitorjclima.controledeintervencoes.view;

import br.com.vitorjclima.controledeintervencoes.core.controller.CondicaoJpaController;
import br.com.vitorjclima.controledeintervencoes.core.controller.EquipamentoJpaController;
import br.com.vitorjclima.controledeintervencoes.db.Condicao;
import br.com.vitorjclima.controledeintervencoes.db.Equipamento;
import java.awt.Cursor;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vitor
 */
public class CadastroCondicaoView extends javax.swing.JFrame {

    private EquipamentoJpaController equipamentoController;
    private Equipamento equipamento;
    private Condicao condicao;
    private CondicaoJpaController condicaoController;
    private Principal principal;

    /**
     * Creates new form CadastroCondicaoView
     */
    public CadastroCondicaoView() {
        initComponents();
        equipamentoController = new EquipamentoJpaController();
        condicaoController = new CondicaoJpaController();
        carregaEquipamentos();
    }

    CadastroCondicaoView(Principal principal) {
        initComponents();
        this.principal = principal;
        equipamentoController = new EquipamentoJpaController();
        condicaoController = new CondicaoJpaController();
        carregaEquipamentos();
    }

    public java.util.Date formataData(String dataRec) {
        if (dataRec == null || dataRec.equals("  /  /    ")) {
            return null;
        }

        java.util.Date date = null;
        try {
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            date = formatter.parse(dataRec);
        } catch (ParseException ex) {
            Logger.getLogger(Condicao.class.getName()).log(Level.SEVERE, null, ex);
        }
        return date;
    }

    private void cursorWait() {
        Cursor ponteiroMouse = new Cursor(Cursor.WAIT_CURSOR);
        setCursor(ponteiroMouse);
    }

    private void cursorDefault() {
        Cursor ponteiroMouse = new Cursor(Cursor.DEFAULT_CURSOR);
        setCursor(ponteiroMouse);
    }

    private void carregaEquipamentos() {
        cursorWait();
        equipamentoComboBox.removeAllItems();

        List<Equipamento> lista = equipamentoController.findEquipamentoEntities();

        for (Iterator itr = lista.iterator(); itr.hasNext();) {
            Equipamento equip = (Equipamento) itr.next();

            equipamentoComboBox.addItem(equip.getEquipamentoId() + " - " + equip.getEquipamentoDescricao());
        }
        cursorDefault();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoSalvar = new javax.swing.JButton();
        labelData = new javax.swing.JLabel();
        data = new javax.swing.JFormattedTextField();
        condicaoComboBox = new javax.swing.JComboBox();
        labelCondicao = new javax.swing.JLabel();
        labelEquipamento = new javax.swing.JLabel();
        equipamentoComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Condição");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        labelData.setText("Data");

        try {
            data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        data.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataActionPerformed(evt);
            }
        });

        condicaoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EM USO", "FORA DE USO", "EM MANUTENÇÃO" }));
        condicaoComboBox.setToolTipText("Selecione a condição atual do equipamento");
        condicaoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                condicaoComboBoxActionPerformed(evt);
            }
        });

        labelCondicao.setText("Condição");

        labelEquipamento.setText("Equipamento");

        equipamentoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EM USO", "FORA DE USO", "EM MANUTENÇÃO" }));
        equipamentoComboBox.setToolTipText("Selecione a condição atual do equipamento");
        equipamentoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipamentoComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEquipamento)
                    .addComponent(labelCondicao)
                    .addComponent(labelData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(botaoSalvar))
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(condicaoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equipamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelCondicao, labelData, labelEquipamento});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {condicaoComboBox, equipamentoComboBox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEquipamento)
                    .addComponent(equipamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCondicao)
                    .addComponent(condicaoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelData)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoSalvar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        condicao = new Condicao();

        String[] equipId = equipamentoComboBox.getModel().getSelectedItem().toString().split(" - ");
        condicao.setEquipamentoId(Integer.parseInt(equipId[0]));
        condicao.setCondicaoEquipamento(condicaoComboBox.getModel().getSelectedItem().toString());
        condicao.setCondicaoDataInicio(formataData(data.getText()));
        cursorWait();

        if (data.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher a data");
        } else {

            try {
                this.condicaoController.create(condicao);
                JOptionPane.showMessageDialog(this, "Cadastro efetuado com sucesso");
                this.dispose();
                 this.principal.setEnabled(true);
            } catch (Exception ex) {
                Logger.getLogger(Condicao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        cursorDefault();
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataActionPerformed

    private void condicaoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_condicaoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_condicaoComboBoxActionPerformed

    private void equipamentoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipamentoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equipamentoComboBoxActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.setVisible(false);
        this.principal.setEnabled(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCondicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCondicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCondicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCondicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCondicaoView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JComboBox condicaoComboBox;
    private javax.swing.JFormattedTextField data;
    private javax.swing.JComboBox equipamentoComboBox;
    private javax.swing.JLabel labelCondicao;
    private javax.swing.JLabel labelData;
    private javax.swing.JLabel labelEquipamento;
    // End of variables declaration//GEN-END:variables
}
